import React, { useEffect } from 'react';
import messaging from '@react-native-firebase/messaging';
import PushNotification from 'react-native-push-notification';

export const registerAppWithFCM = async () => {
  await messaging().registerForRemoteNotifications();
};

export const unregisterAppWithFCM = async () => {
  await messaging().unregisterForRemoteNotifications();
};

export const requestPermission = async () => {
  const granted = await messaging().requestPermission();
  PushNotification.requestPermissions();
  if (granted) {
    console.log('User granted messaging permissions!');
  } else {
    console.log('User declined messaging permissions :(');
  }
};

export const subscribeToTopic = async topic => {
  console.log(`Subscribing To ${topic} ...`);
  await messaging().subscribeToTopic(topic.toString());
  console.log('Done');
};

export const unsubscribeFromTopic = async topic => {
  console.log(`Unsubscribe From ${topic}`);
  await messaging().unsubscribeFromTopic(topic.toString());
  console.log('Done');
};

const ForegroundNotifService = () => {
  useEffect(() => {
    const subscribed = messaging().onMessage(async remoteMessage => {
      console.log('FCM Data Message: ', remoteMessage.data);
      const { data } = remoteMessage;

      const config = {
        /* Android Only Properties */ // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
        ticker: 'Ada surat baru untuk Anda.', // (optional)
        autoCancel: true, // (optional) default: true
        largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
        smallIcon: 'ic_notification', // (optional) default: "ic_notification" with fallback for "ic_launcher"
        // bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
        // subText: "This is a subText", // (optional) default: none
        // color: "red", // (optional) default: system default
        vibrate: true, // (optional) default: true
        vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
        // tag: 'some_tag', // (optional) add tag to message
        // group: "group", // (optional) add group to message
        // ongoing: false, // (optional) set whether this is an "ongoing" notification
        priority: 'high', // (optional) set notification priority, default: high
        visibility: 'private', // (optional) set notification visibility, default: private
        importance: 'high', // (optional) set notification importance, default: high

        /* iOS only properties */
        // alertAction: // (optional) default: view
        // category: // (optional) default: null
        // userInfo: // (optional) default: null (object containing additional notification data)

        /* iOS and Android properties */
        title: data.title, // (optional)
        message: data.message, // (required)
        playSound: true, // (optional) default: true
        soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
        // number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
        // repeatType: 'day', // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
        // actions: '["Yes", "No"]',  // (Android only) See the doc for notification actions to know more
      };

      PushNotification.checkPermissions(permission => console.log({ permission }));
      PushNotification.localNotification(config);
    });
  }, []);

  return null;
};

export default ForegroundNotifService;